buildscript {
  dependencies {
    repositories {
      jcenter()
      maven { url 'http://repo.spring.io/plugins-release' }
    }

    classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion",
              "se.transmode.gradle:gradle-docker:$dockerPluginVersion"
  }
}

allprojects {
  version = appVersion
  group = appGroup

  apply plugin: 'java'
  apply plugin: 'idea'

  targetCompatibility = sourceCompatibility = JavaVersion.VERSION_1_8

  repositories {
    jcenter()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/libs-milestone' }
  }

  task wrapper(type: Wrapper) { gradleVersion = '2.12' }
}

subprojects {
  jar {
    baseName = "$appGroup-$projectDir.name"
  }

  apply plugin: 'io.spring.dependency-management'

  dependencyManagement {
    imports {
      mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
      mavenBom "org.springframework.cloud:spring-cloud-sleuth:$springCloudSleuthVersion"
    }
  }

  apply plugin: 'spring-boot'

  springBoot { executable = true }

  dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-config',
            'org.springframework.cloud:spring-cloud-starter-eureka',
            'org.springframework.cloud:spring-cloud-starter-hystrix',
            'org.springframework.cloud:spring-cloud-starter-ribbon',
            'org.springframework.cloud:spring-cloud-starter-feign',
            "com.netflix.spring:spring-cloud-netflix-contrib:$netflixContribVersion",
            'org.springframework.boot:spring-boot-starter-hateoas',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.projectlombok:lombok'

    testCompile 'org.springframework.boot:spring-boot-starter-test',
                'org.springframework.restdocs:spring-restdocs-mockmvc'
  }

  apply plugin: 'docker'

  task buildDocker(type: Docker) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')

    doFirst {
      copy {
        from jar
        into stageDir
      }
    }

    baseImage "java:8"
    maintainer 'Maksim Kostromin <daggerok@gmail.com>'
  }
}

project(':cloud-config-server') {
  dependencies {
    compile 'org.springframework.cloud:spring-cloud-config-server'
  }
}

project(':discovery-service-registry') {
  dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-eureka-server'
  }
}

project(':oauth-server') {
  dependencies {
    compile 'org.springframework.boot:spring-boot-starter-security',
            'org.springframework.boot:spring-boot-starter-mustache',
            'org.springframework.security.oauth:spring-security-oauth2'
  }
}

project(':domain') {}

project(':invoice') {
  dependencies {
    compile project(':domain'),
//            'org.springframework.cloud:spring-cloud-starter-oauth2',
//            'org.springframework.cloud:spring-cloud-stream',
//            'org.springframework.cloud:spring-cloud-starter-stream-rabbit',
//            'org.springframework.cloud:spring-cloud-starter-bus-amqp',
//            'org.springframework.cloud:spring-cloud-starter-sleuth',
//            'org.springframework.cloud:spring-cloud-starter-zipkin',
            'org.springframework.cloud:spring-cloud-security',
            'org.springframework.boot:spring-boot-starter-data-rest',
            'org.springframework.boot:spring-boot-starter-data-jpa'

    runtime 'com.h2database:h2'
  }
}

project(':menu') {
  dependencies {
    compile project(':domain'),
//            'org.springframework.cloud:spring-cloud-starter-oauth2',
//            'org.springframework.cloud:spring-cloud-stream',
//            'org.springframework.cloud:spring-cloud-starter-stream-rabbit',
//            'org.springframework.cloud:spring-cloud-starter-bus-amqp',
//            'org.springframework.cloud:spring-cloud-starter-sleuth',
//            'org.springframework.cloud:spring-cloud-starter-zipkin',
            'org.springframework.cloud:spring-cloud-security',
            'org.springframework.boot:spring-boot-starter-data-rest',
            'org.springframework.boot:spring-boot-starter-data-jpa'

    runtime 'com.h2database:h2'
  }
}

project(':provider-ui') {
  dependencies {
    compile project(':domain'),
            'org.springframework.boot:spring-boot-starter-mustache',
            'org.springframework.cloud:spring-cloud-starter-zuul'
  }
}

project(':customer-ui') {
  dependencies {
    compile project(':domain'),
            'org.springframework.boot:spring-boot-starter-mustache',
            'org.springframework.cloud:spring-cloud-starter-zuul'
  }
}

project(':ui') {
  dependencies {
    compile project(':domain'),
            'org.springframework.cloud:spring-cloud-starter-oauth2',
            'org.springframework.cloud:spring-cloud-security',
            'org.springframework.boot:spring-boot-devtools',
            'org.springframework.cloud:spring-cloud-starter-zuul'
  }
}
